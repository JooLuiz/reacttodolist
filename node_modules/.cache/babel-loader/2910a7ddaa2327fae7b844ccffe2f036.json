{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ernane-PC\\\\Desktop\\\\reacttodolist\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      axios.delete(\"https://jsonplaceholder.typicode.com/todos/${id}\");\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      })); // const newTodo = {\n      //   id: this.state.todos.length + 1,\n      //   title,\n      //   complete: false\n      // };\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=1\").then(res => this.setState({\n      todos: res.data\n    }));\n  } //ToggleComplete\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Ernane-PC\\Desktop\\reacttodolist\\src\\App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","delete","filter","addTodo","title","post","then","res","data","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Todos from \"./components/Todos\";\r\nimport Header from \"./components/layout/Header\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport About from \"./components/pages/About\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=1\")\r\n      .then(res => this.setState({ todos: res.data }));\r\n  }\r\n\r\n  //ToggleComplete\r\n  markComplete = id => {\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    });\r\n  };\r\n\r\n  delTodo = id => {\r\n    axios.delete(\"https://jsonplaceholder.typicode.com/todos/${id}\");\r\n    this.setState({\r\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\r\n    });\r\n  };\r\n\r\n  addTodo = title => {\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n        title,\r\n        completed: false\r\n      })\r\n      .then(res =>\r\n        this.setState({\r\n          todos: [...this.state.todos, res.data]\r\n        })\r\n      );\r\n    // const newTodo = {\r\n    //   id: this.state.todos.length + 1,\r\n    //   title,\r\n    //   complete: false\r\n    // };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <Header />\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={props => (\r\n                <React.Fragment>\r\n                  <AddTodo addTodo={this.addTodo} />\r\n                  <Todos\r\n                    todos={this.state.todos}\r\n                    markComplete={this.markComplete}\r\n                    delTodo={this.delTodo}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n            <Route path=\"/about\" component={About} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}